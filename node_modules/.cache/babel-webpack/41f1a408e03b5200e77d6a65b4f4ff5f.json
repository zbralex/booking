{"ast":null,"code":"import { ROOMS } from '../../services/rooms';\nimport { RoomDetailComponent } from \"../room-detail/room-detail.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/rooms.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"../../services/map-set.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../carousel/carousel.component\";\nimport * as i6 from \"@angular/material/button\";\n\nfunction ListRoomsComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\", 3);\n    i0.ɵɵlistener(\"click\", function ListRoomsComponent_ng_container_2_Template_li_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const room_r1 = ctx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.setCoordinates(room_r1.lat, room_r1.long);\n    });\n    i0.ɵɵelementStart(2, \"article\", 4);\n    i0.ɵɵelementStart(3, \"div\", 5);\n    i0.ɵɵelement(4, \"app-carousel\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 7);\n    i0.ɵɵelementStart(6, \"h2\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵelementStart(9, \"span\", 8);\n    i0.ɵɵtext(10, \"\\u0410\\u0434\\u0440\\u0435\\u0441\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p\");\n    i0.ɵɵelementStart(13, \"span\", 8);\n    i0.ɵɵtext(14, \"\\u0426\\u0435\\u043D\\u0430 \\u0437\\u0430 \\u043D\\u043E\\u0447\\u044C\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ListRoomsComponent_ng_container_2_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const room_r1 = ctx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.openDetail(room_r1.id);\n    });\n    i0.ɵɵtext(17, \"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0435\\u0435\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const room_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"images\", room_r1.images);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(room_r1.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", room_r1.address, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", room_r1.price, \" \\u20BD \");\n  }\n}\n\nexport let ListRoomsComponent = /*#__PURE__*/(() => {\n  class ListRoomsComponent {\n    constructor(roomsService, matDialog, mapSetService) {\n      this.roomsService = roomsService;\n      this.matDialog = matDialog;\n      this.mapSetService = mapSetService;\n      this.rooms = [];\n      this.coords = {};\n      this.placemarks = [];\n      this.mapSetService.onClick.subscribe(center => this.coords = center);\n    }\n\n    ngOnInit() {\n      this.getRooms();\n    }\n\n    getRooms() {\n      this.roomsService.getRooms(ROOMS).subscribe(res => {\n        this.rooms.push(res);\n      }); // подготавливаем данные для передачи в placemarks\n\n      this.rooms.forEach(item => {\n        let newItem = {\n          geometry: [item.lat, item.long],\n          properties: {\n            balloonContent: `<strong>${item.name}</strong><br>${item.address}`,\n            balloonContentBody: `<img src=\"${item.images[0]}\"/>`\n          },\n          options: {\n            preset: 'islands#icon',\n            iconColor: '#0095b6'\n          }\n        };\n        this.placemarks.push(newItem);\n      });\n      this.mapSetService.setPlacemarks(this.placemarks);\n    }\n\n    openDetail(id) {\n      this.matDialog.open(RoomDetailComponent, {\n        width: '330px',\n        height: '400px',\n        data: {\n          title: 'Отель id: ' + id\n        }\n      });\n    }\n\n    setCoordinates(lat, long) {\n      let coord = [lat, long];\n      this.mapSetService.setCoordinates(coord); //this.mapSetService.setPlacemarks(this.placemarks)\n    }\n\n  }\n\n  ListRoomsComponent.ɵfac = function ListRoomsComponent_Factory(t) {\n    return new (t || ListRoomsComponent)(i0.ɵɵdirectiveInject(i1.RoomsService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.MapSetService));\n  };\n\n  ListRoomsComponent.ɵcmp = i0.ɵɵdefineComponent({\n    type: ListRoomsComponent,\n    selectors: [[\"app-list-rooms\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"list-rooms\"], [1, \"list-rooms__wrap\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [1, \"list-rooms__item\"], [1, \"list-rooms__carousel\"], [3, \"images\"], [1, \"list-rooms__info\"], [1, \"list-rooms__item-title\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"]],\n    template: function ListRoomsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵelementStart(1, \"ul\", 1);\n        i0.ɵɵtemplate(2, ListRoomsComponent_ng_container_2_Template, 18, 4, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.rooms);\n      }\n    },\n    directives: [i4.NgForOf, i5.CarouselComponent, i6.MatButton],\n    styles: [\".list-rooms__wrap[_ngcontent-%COMP%]{list-style:none;padding:15px}.list-rooms__item[_ngcontent-%COMP%]{border:1px solid #ccc;padding:1rem;border-radius:4px;min-height:100px;width:auto;margin:25px;box-sizing:border-box;display:flex;flex-flow:row nowrap;justify-content:space-between;cursor:pointer}.list-rooms__item-title[_ngcontent-%COMP%]{font-weight:bold}.list-rooms__info[_ngcontent-%COMP%]{flex-basis:65%;padding-left:25px}.list-rooms__carousel[_ngcontent-%COMP%]{flex-basis:35%}\"]\n  });\n  return ListRoomsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}