{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nlet Command = require('selenium-webdriver/lib/command').Command;\n\nclass Extender {\n  constructor(driver) {\n    this.driver_ = driver;\n    this.params_ = {};\n    this.executor_ = driver.getExecutor ? driver.getExecutor() : driver.executor_;\n  }\n  /**\n   * Defines a new command. When a command is sent, the {@code path} will be\n   * preprocessed using the command's parameters; any path segments prefixed\n   * with \":\" will be replaced by the parameter of the same name. For example,\n   * given \"/person/:name\" and the parameters \"{name: 'Bob'}\", the final command\n   * path will be \"/person/Bob\".\n   *\n   * @param {string} name The command name.\n   * @param {string} params The names of the parameters to the command\n   * @param {string} method The HTTP method to use when sending this command.\n   * @param {string} path The path to send the command to, relative to\n   *     the WebDriver server's command root and of the form\n   *     \"/path/:variable/segment\".\n   */\n\n\n  defineCommand(name, params, method, path) {\n    this.executor_.defineCommand(name, method, path);\n    this.params_[method + ':' + name] = params;\n  }\n  /**\n   * Executes a command which was defined by defineCommand()\n   *\n   * @param {string} name The command name.\n   * @param {*[]} params The parameters to the command\n   * @return {webdriver.promise.Promise<*>} A promise that will be resolved with\n   *     the command result\n   */\n\n\n  execCommand(name, method, params) {\n    var paramNames = this.params_[method + ':' + name];\n\n    if (paramNames === undefined) {\n      throw new RangeError('The command \"' + name + '\" has not yet been defined');\n    }\n\n    if (paramNames.length !== params.length) {\n      throw new RangeError('The command \"' + name + '\" expected ' + paramNames.length + ' parameters, got ' + params.length);\n    }\n\n    var command = new Command(name);\n\n    for (var i = 0; i < params.length; i++) {\n      if (params[i] !== undefined) {\n        command.setParameter(paramNames[i], params[i]);\n      }\n    }\n\n    return this.driver_.schedule(command, 'Custom Command: ' + name + '(' + params.map(x => {\n      if (typeof x == 'number' || typeof x == 'boolean' || typeof x == 'function') {\n        return x.toString();\n      } else if (x == null) {\n        return '' + x;\n      } else {\n        return JSON.stringify(x);\n      }\n    }).join(', ') + ')');\n  }\n\n}\n\nexports.Extender = Extender; //# sourceMappingURL=extender.js.map","map":null,"metadata":{},"sourceType":"script"}