{"ast":null,"code":"'use strict';\n\nconst url = require('url');\n\nconst https = require('https');\n/**\n * This currently needs to be applied to all Node.js versions\n * in order to determine if the `req` is an HTTP or HTTPS request.\n *\n * There is currently no PR attempting to move this property upstream.\n */\n\n\nconst patchMarker = \"__agent_base_https_request_patched__\";\n\nif (!https.request[patchMarker]) {\n  https.request = function (request) {\n    return function (_options, cb) {\n      let options;\n\n      if (typeof _options === 'string') {\n        options = url.parse(_options);\n      } else {\n        options = Object.assign({}, _options);\n      }\n\n      if (null == options.port) {\n        options.port = 443;\n      }\n\n      options.secureEndpoint = true;\n      return request.call(https, options, cb);\n    };\n  }(https.request);\n\n  https.request[patchMarker] = true;\n}\n/**\n * This is needed for Node.js >= 9.0.0 to make sure `https.get()` uses the\n * patched `https.request()`.\n *\n * Ref: https://github.com/nodejs/node/commit/5118f31\n */\n\n\nhttps.get = function (_url, _options, cb) {\n  let options;\n\n  if (typeof _url === 'string' && _options && typeof _options !== 'function') {\n    options = Object.assign({}, url.parse(_url), _options);\n  } else if (!_options && !cb) {\n    options = _url;\n  } else if (!cb) {\n    options = _url;\n    cb = _options;\n  }\n\n  const req = https.request(options, cb);\n  req.end();\n  return req;\n};","map":null,"metadata":{},"sourceType":"script"}