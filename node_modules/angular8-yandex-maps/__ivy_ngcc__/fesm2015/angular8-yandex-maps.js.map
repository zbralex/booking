{"version":3,"file":"angular8-yandex-maps.js","sources":["../../../projects/angular8-yandex-maps/src/lib/services/ya-api-loader/ya-api-loader.service.ts","../../../projects/angular8-yandex-maps/src/lib/event-manager.ts","../../../projects/angular8-yandex-maps/src/lib/utils/generate-random-id.ts","../../../projects/angular8-yandex-maps/src/lib/components/ya-map/ya-map.component.ts","../../../projects/angular8-yandex-maps/src/lib/components/ya-geoobject/ya-geoobject.directive.ts","../../../projects/angular8-yandex-maps/src/lib/components/ya-placemark/ya-placemark.directive.ts","../../../projects/angular8-yandex-maps/src/lib/components/ya-clusterer/ya-clusterer.component.ts","../../../projects/angular8-yandex-maps/src/lib/components/ya-control/ya-control.directive.ts","../../../projects/angular8-yandex-maps/src/lib/components/ya-multiroute/ya-multiroute.directive.ts","../../../projects/angular8-yandex-maps/src/lib/components/ya-panorama/ya-panorama.directive.ts","../../../projects/angular8-yandex-maps/src/lib/angular-yandex-maps.module.ts","../../../projects/angular8-yandex-maps/src/lib/services/ya-geocoder/ya-geocoder.service.ts","../../../projects/angular8-yandex-maps/src/public-api.ts","../../../projects/angular8-yandex-maps/src/angular8-yandex-maps.ts"],"names":[],"mappings":"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","sourcesContent":["import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\r\nimport { from, fromEvent, merge, Observable, throwError } from 'rxjs';\r\nimport { map, switchMap, take } from 'rxjs/operators';\r\n\r\nexport const YA_CONFIG = new InjectionToken<YaConfig>('YA_CONFIG');\r\n\r\nexport interface YaConfig {\r\n  /**\r\n   * API key. You can get a key in the developer's dashboard.\r\n   */\r\n  apikey?: string;\r\n  /**\r\n   * Locale.\r\n   */\r\n  lang?: 'ru_RU' | 'en_US' | 'en_RU' | 'ru_UA' | 'uk_UA' | 'tr_TR';\r\n  /**\r\n   * The order for setting geographical coordinates in API functions that accept longitude-latitude input.\r\n   */\r\n  coordorder?: 'latlong' | 'longlat';\r\n  /**\r\n   * List of modules to load.\r\n   */\r\n  load?: string;\r\n  /**\r\n   * API loading mode.\r\n   */\r\n  mode?: 'release' | 'debug';\r\n  /**\r\n   * Use commercial version of the API.\r\n   */\r\n  enterprise?: boolean;\r\n  /**\r\n   * Version number of the API.\r\n   */\r\n  version?: string;\r\n}\r\n\r\n/**\r\n * The `YaApiLoader` service handles loading of Yandex.Maps API.\r\n *\r\n * @example\r\n * ```ts\r\n * import { YaApiLoaderService } from 'angular8-yandex-maps';\r\n *\r\n * export class AppComponent {\r\n *   constructor(private yaApiLoaderService: YaApiLoaderService) {\r\n *     this.yaApiLoaderService.load()\r\n *       .subscribe(v => console.log(v))\r\n *   }\r\n * }\r\n *```\r\n *\r\n * @dynamic\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class YaApiLoaderService {\r\n  private readonly _config: YaConfig;\r\n\r\n  private readonly _defaultConfig: YaConfig = { lang: 'ru_RU' };\r\n\r\n  private _script: HTMLScriptElement;\r\n\r\n  constructor(\r\n    @Optional() @Inject(YA_CONFIG) config: YaConfig | null,\r\n    @Inject(DOCUMENT) private readonly _document: Document,\r\n  ) {\r\n    this._config = {\r\n      ...this._defaultConfig,\r\n      ...config,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Loads Yandex.Maps API\r\n   */\r\n  load(): Observable<typeof ymaps> {\r\n    if (window.ymaps) {\r\n      return from(ymaps.ready()).pipe(map(() => ymaps));\r\n    }\r\n\r\n    if (!this._script) {\r\n      const script = this._document.createElement('script');\r\n\r\n      script.type = 'text/javascript';\r\n      script.src = this._getScriptSource(this._config);\r\n      script.id = 'yandexMapsApiScript';\r\n      script.async = true;\r\n      script.defer = true;\r\n\r\n      this._script = this._document.body.appendChild(script);\r\n    }\r\n\r\n    const load = fromEvent(this._script, 'load').pipe(\r\n      switchMap(() => from(ymaps.ready()).pipe(map(() => ymaps))),\r\n    );\r\n\r\n    const error = fromEvent(this._script, 'error').pipe(switchMap((e) => throwError(e)));\r\n\r\n    return merge(load, error).pipe(take(1));\r\n  }\r\n\r\n  /**\r\n   * Returns script source by config\r\n   * @param config config with parameters that will be added in source\r\n   * @example\r\n   * // returns 'https://api-maps.yandex.ru/2.1/?apikey=658f67a2-fd77-42e9-b99e-2bd48c4ccad4&lang=en_US'\r\n   * getScriptSource({ apikey: '658f67a2-fd77-42e9-b99e-2bd48c4ccad4', lang: 'en_US' })\r\n   */\r\n  private _getScriptSource(config: YaConfig): string {\r\n    const { enterprise, version = '2.1', ...rest } = config;\r\n    const params = this._convertConfigIntoQueryParams(rest);\r\n\r\n    return `https://${enterprise ? 'enterprise.' : ''}api-maps.yandex.ru/${version}/?${params}`;\r\n  }\r\n\r\n  /**\r\n   * Converts a config into a query string parameters\r\n   * @param config object for converting\r\n   * @example\r\n   * // returns \"lang=ru_RU&apikey=XXX\"\r\n   * convertIntoQueryParams({ lang: 'ru_RU', apikey: 'XXX' })\r\n   */\r\n  private _convertConfigIntoQueryParams(config: YaConfig): string {\r\n    return Object.entries(config)\r\n      .map(([key, value]) => `${key}=${value}`)\r\n      .join('&');\r\n  }\r\n}\r\n","/**\r\n * Copied from angular/components/google-maps and edited for Yandex Maps API.\r\n * {@link https://github.com/angular/components/blob/master/src/google-maps/map-event-manager.ts}\r\n */\r\n\r\nimport { NgZone } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subscriber } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { YaEvent } from './typings/ya-event';\r\n\r\n/**\r\n * @internal\r\n */\r\ntype EventManagerTarget = {\r\n  events: ymaps.IEventManager;\r\n};\r\n\r\n/**\r\n * Manages event on a Yandex Maps object, ensuring that events are added only when necessary.\r\n * @internal\r\n */\r\nexport class EventManager {\r\n  /**\r\n   * Listeners that were added before the target was set.\r\n   */\r\n  private _pending: {\r\n    observable: Observable<any>;\r\n    observer: Subscriber<any>;\r\n  }[] = [];\r\n\r\n  private _listeners: {\r\n    name: string;\r\n    callback: (e: ymaps.Event) => void;\r\n    manager: ymaps.IEventManager;\r\n  }[] = [];\r\n\r\n  private readonly _targetStream = new BehaviorSubject<EventManagerTarget | undefined>(undefined);\r\n\r\n  constructor(private readonly _ngZone: NgZone) {}\r\n\r\n  /**\r\n   * Gets an observable that adds an event listener to the map when a consumer subscribes to it.\r\n   * @param name\r\n   */\r\n  getLazyEmitter(name: string): Observable<YaEvent> {\r\n    return this._targetStream.pipe(\r\n      switchMap((target) => {\r\n        const observable = new Observable<YaEvent>((observer) => {\r\n          // If the target hasn't been initialized yet, cache the observer so it can be added later.\r\n          if (!target) {\r\n            this._pending.push({ observable, observer });\r\n            return undefined;\r\n          }\r\n\r\n          const callback = (event: ymaps.Event) => {\r\n            const e = {\r\n              event,\r\n              target,\r\n              ymaps,\r\n            };\r\n\r\n            this._ngZone.run(() => observer.next(e));\r\n          };\r\n\r\n          const listener = target.events.add(name, callback);\r\n          this._listeners.push({ name, callback, manager: listener });\r\n\r\n          // Unsubscribe function\r\n          return () => listener.remove(name, callback as any);\r\n        });\r\n\r\n        return observable;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Sets the current target that the manager should bind events to.\r\n   * @param target\r\n   */\r\n  setTarget(target: EventManagerTarget): void {\r\n    const currentTarget = this._targetStream.value;\r\n\r\n    if (target === currentTarget) {\r\n      return;\r\n    }\r\n\r\n    // Clear the listeners from the pre-existing target.\r\n    if (currentTarget) {\r\n      this._clearListeners();\r\n      this._pending = [];\r\n    }\r\n\r\n    this._targetStream.next(target);\r\n\r\n    // Add the listeners that were bound before the map was initialized.\r\n    this._pending.forEach((subscriber) => subscriber.observable.subscribe(subscriber.observer));\r\n\r\n    this._pending = [];\r\n  }\r\n\r\n  /**\r\n   * Destroys the manager and clears the event listeners.\r\n   */\r\n  destroy(): void {\r\n    this._clearListeners();\r\n    this._pending = [];\r\n    this._targetStream.complete();\r\n  }\r\n\r\n  /**\r\n   * Clears all currently-registered event listeners.\r\n   */\r\n  private _clearListeners() {\r\n    this._listeners.forEach((listener) => {\r\n      const { name, callback, manager } = listener;\r\n      manager.remove(name, callback as any);\r\n    });\r\n\r\n    this._listeners = [];\r\n  }\r\n}\r\n","/**\n * Generates a random string based on Date in hexadecimal numeral system\n * @example f175517fa4f3\n * @internal\n */\nexport const generateRandomId = (): string => {\n  return `f${Number(new Date()).toString(16)}`;\n};\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Output,\r\n  PLATFORM_ID,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { EventManager } from '../../event-manager';\r\nimport { generateRandomId } from '../../utils/generate-random-id';\r\nimport { YaApiLoaderService } from '../../services/ya-api-loader/ya-api-loader.service';\r\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\r\nimport { YaEvent } from '../../typings/ya-event';\r\n\r\n/**\r\n * The `ya-map` component wraps `ymaps.Map` class from the Yandex Maps API.\r\n * You can configure the map via the component's inputs.\r\n * Events can be bound using the outputs of the component.\r\n *\r\n * <example-url>https://stackblitz.com/edit/map-onload-event?embed=1</example-url>\r\n *\r\n * @example\r\n * ```html\r\n * <ya-map\r\n *   [center]=\"[55.751952, 37.600739]\"\r\n *   [state]=\"{type: 'yandex#satellite'}\"\r\n * ></ya-map>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ya-map',\r\n  template: '<div #container></div>',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class YaMapComponent implements AfterViewInit, OnChanges, OnDestroy {\r\n  @ViewChild('container') container: ElementRef;\r\n\r\n  private readonly _sub = new Subscription();\r\n\r\n  private readonly _eventManager = new EventManager(this._ngZone);\r\n\r\n  map$ = new BehaviorSubject<ymaps.Map | undefined>(undefined);\r\n\r\n  isBrowser: boolean;\r\n\r\n  /**\r\n   * Map center geocoordinates. Default is [0, 0].\r\n   * Shorthand for [state]=\"{ center: [0, 0] }\".\r\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Map.html#Map__param-state.center}\r\n   */\r\n  @Input() center: number[];\r\n\r\n  /**\r\n   * Map zoom level. Default level is 10.\r\n   * Shorthand for [state]=\"{ zoom: 10 }\".\r\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Map.html#Map__param-state.zoom}\r\n   */\r\n  @Input() zoom: number;\r\n\r\n  /**\r\n   * States for the map.\r\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Map.html#Mapparam-state}\r\n   */\r\n  @Input() state: ymaps.IMapState;\r\n\r\n  /**\r\n   * Options for the map.\r\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Map.html#Mapparam-options}\r\n   */\r\n  @Input() options: ymaps.IMapOptions;\r\n\r\n  /**\r\n   * Map instance is created.\r\n   */\r\n  @Output() ready: EventEmitter<YaReadyEvent<ymaps.Map>> = new EventEmitter<\r\n    YaReadyEvent<ymaps.Map>\r\n  >();\r\n\r\n  /**\r\n   * The start of a new smooth map movement.\r\n   */\r\n  @Output() actionbegin: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('actionbegin');\r\n\r\n  /**\r\n   * Event that occurs when an action step was prematurely stopped.\r\n   */\r\n  @Output() actionbreak: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('actionbreak');\r\n\r\n  /**\r\n   * The end of smooth map movement.\r\n   */\r\n  @Output() actionend: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('actionend');\r\n\r\n  /**\r\n   * The start of a new step of smooth movement.\r\n   */\r\n  @Output() actiontick: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('actiontick');\r\n\r\n  /**\r\n   * The end of performing a step of smooth movement.\r\n   */\r\n  @Output() actiontickcomplete: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('actiontickcomplete');\r\n\r\n  /**\r\n   * Closing the balloon.\r\n   */\r\n  @Output() balloonclose: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('balloonclose');\r\n\r\n  /**\r\n   * Opening a balloon on a map.\r\n   */\r\n  @Output() balloonopen: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('balloonopen');\r\n\r\n  /**\r\n   * Event for a change to the map viewport.\r\n   */\r\n  @Output() boundschange: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('boundschange');\r\n\r\n  /**\r\n   * Single left-click on the object.\r\n   */\r\n  @Output() yaclick: Observable<YaEvent<ymaps.Map>> = this._eventManager.getLazyEmitter('click');\r\n\r\n  /**\r\n   * Calls the element's context menu.\r\n   */\r\n  @Output() yacontextmenu: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('contextmenu');\r\n\r\n  /**\r\n   * Double left-click on the object.\r\n   */\r\n  @Output() yadblclick: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('dblclick');\r\n\r\n  /**\r\n   * The map was destroyed.\r\n   */\r\n  @Output() destroy: Observable<YaEvent<ymaps.Map>> = this._eventManager.getLazyEmitter('destroy');\r\n\r\n  /**\r\n   * Closing the hint.\r\n   */\r\n  @Output() hintclose: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('hintclose');\r\n\r\n  /**\r\n   * Opening a hint on a map.\r\n   */\r\n  @Output() hintopen: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('hintopen');\r\n\r\n  /**\r\n   * Map margins changed.\r\n   */\r\n  @Output() marginchange: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('marginchange');\r\n\r\n  /**\r\n   * Pressing the mouse button over the object.\r\n   */\r\n  @Output() yamousedown: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('mousedown');\r\n\r\n  /**\r\n   * Pointing the cursor at the object.\r\n   */\r\n  @Output() yamouseenter: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('mouseenter');\r\n\r\n  /**\r\n   * Moving the cursor off of the object.\r\n   */\r\n  @Output() yamouseleave: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('mouseleave');\r\n\r\n  /**\r\n   * Moving the cursor over the object.\r\n   */\r\n  @Output() yamousemove: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('mousemove');\r\n\r\n  /**\r\n   * Letting go of the mouse button over an object.\r\n   */\r\n  @Output() yamouseup: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('mouseup');\r\n\r\n  /**\r\n   * End of multitouch.\r\n   */\r\n  @Output() multitouchend: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('multitouchend');\r\n\r\n  /**\r\n   * Repeating event during multitouch.\r\n   */\r\n  @Output() multitouchmove: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('multitouchmove');\r\n\r\n  /**\r\n   * Start of multitouch.\r\n   */\r\n  @Output() multitouchstart: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('multitouchstart');\r\n\r\n  /**\r\n   * Map options changed.\r\n   */\r\n  @Output() optionschange: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('optionschange');\r\n\r\n  /**\r\n   * Map size changed.\r\n   */\r\n  @Output() sizechange: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('sizechange');\r\n\r\n  /**\r\n   * The map type changed.\r\n   */\r\n  @Output() typechange: Observable<YaEvent<ymaps.Map>> =\r\n    this._eventManager.getLazyEmitter('typechange');\r\n\r\n  /**\r\n   * Mouse wheel scrolling.\r\n   */\r\n  @Output() yawheel: Observable<YaEvent<ymaps.Map>> = this._eventManager.getLazyEmitter('wheel');\r\n\r\n  constructor(\r\n    private readonly _ngZone: NgZone,\r\n    private readonly _yaApiLoaderService: YaApiLoaderService,\r\n    @Inject(PLATFORM_ID) platformId: Object,\r\n  ) {\r\n    this.isBrowser = isPlatformBrowser(platformId);\r\n  }\r\n\r\n  /**\r\n   * Handles input changes and passes them in API.\r\n   * @param changes\r\n   */\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const map = this.map$.value;\r\n\r\n    if (map) {\r\n      const { center, zoom, state, options } = changes;\r\n\r\n      if (state) {\r\n        this._setState(this._combineState(), map);\r\n      }\r\n\r\n      if (center) {\r\n        map.setCenter(center.currentValue);\r\n      }\r\n\r\n      if (zoom) {\r\n        map.setZoom(zoom.currentValue);\r\n      }\r\n\r\n      if (options) {\r\n        map.options.set(options.currentValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    /**\r\n     * It should be a noop during server-side rendering.\r\n     */\r\n    if (this.isBrowser) {\r\n      const sub = this._yaApiLoaderService.load().subscribe(() => {\r\n        const id = generateRandomId();\r\n        const map = this._createMap(id);\r\n\r\n        this.map$.next(map);\r\n        this._eventManager.setTarget(map);\r\n        this._ngZone.run(() => this.ready.emit({ ymaps, target: map }));\r\n      });\r\n\r\n      this._sub.add(sub);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._eventManager.destroy();\r\n    this._sub.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Destructs state and passes it in API.\r\n   * @param state\r\n   * @param map\r\n   */\r\n  private _setState(state: ymaps.IMapState, map: ymaps.Map): void {\r\n    const { behaviors, bounds, center, controls, margin, type, zoom } = state;\r\n\r\n    if (behaviors) {\r\n      map.behaviors.enable(behaviors);\r\n    }\r\n\r\n    if (bounds) {\r\n      map.setBounds(bounds);\r\n    }\r\n\r\n    if (center) {\r\n      map.setCenter(center);\r\n    }\r\n\r\n    if (controls) {\r\n      controls.forEach((control) => map.controls.add(control));\r\n    }\r\n\r\n    if (margin) {\r\n      map.margin.setDefaultMargin(margin);\r\n    }\r\n\r\n    if (type) {\r\n      map.setType(type);\r\n    }\r\n\r\n    if (zoom) {\r\n      map.setZoom(zoom);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a map.\r\n   * @param id ID which will be set to the map container.\r\n   */\r\n  private _createMap(id: string): ymaps.Map {\r\n    const containerElem: HTMLElement = this.container.nativeElement;\r\n    containerElem.setAttribute('id', id);\r\n    containerElem.style.cssText = 'width: 100%; height: 100%;';\r\n\r\n    return new ymaps.Map(id, this._combineState(), this.options || {});\r\n  }\r\n\r\n  /**\r\n   * Combines the center and zoom into single object.\r\n   */\r\n  private _combineState(): ymaps.IMapState {\r\n    const state = this.state || {};\r\n\r\n    return {\r\n      ...state,\r\n      center: this.center || state.center || [0, 0],\r\n      zoom: this.zoom ?? state.zoom ?? 10,\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { EventManager } from '../../event-manager';\r\nimport { YaMapComponent } from '../ya-map/ya-map.component';\r\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\r\nimport { YaEvent } from '../../typings/ya-event';\r\n\r\n/**\r\n * The `ya-geoobject` component wraps `ymaps.GeoObject` class from the Yandex Maps API.\r\n * You can configure it via the component's inputs.\r\n * Events can be bound using the outputs of the component.\r\n *\r\n * <example-url>https://stackblitz.com/edit/geoobject-polygon?embed=1</example-url>\r\n *\r\n * @example\r\n * ```html\r\n * <ya-map [center]=\"[55.761952, 37.620739]\">\r\n *   <ya-geoobject\r\n *     [feature]=\"{ geometry: { type: 'Rectangle', coordinates: [[55.665, 37.66], [55.64,37.53]] } }\"\r\n *   ></ya-geoobject>\r\n * </ya-map>\r\n * ```\r\n */\r\n@Directive({\r\n  selector: 'ya-geoobject',\r\n})\r\nexport class YaGeoObjectDirective implements OnInit, OnChanges, OnDestroy {\r\n  private readonly _sub = new Subscription();\r\n\r\n  private readonly _eventManager = new EventManager(this._ngZone);\r\n\r\n  geoObject?: ymaps.GeoObject;\r\n\r\n  /**\r\n   * Feature for the GeoObject.\r\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/GeoObject.html#GeoObjectparam-feature}\r\n   */\r\n  @Input() feature: ymaps.IGeoObjectFeature;\r\n\r\n  /**\r\n   * Options for the GeoObject.\r\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/GeoObject.html#GeoObjectparam-options}\r\n   */\r\n  @Input() options: ymaps.IGeoObjectOptions;\r\n\r\n  /**\r\n   * GeoObject instance is added in a Map.\r\n   */\r\n  @Output() ready: EventEmitter<YaReadyEvent<ymaps.GeoObject>> = new EventEmitter<\r\n    YaReadyEvent<ymaps.GeoObject>\r\n  >();\r\n\r\n  /**\r\n   * Closing the balloon.\r\n   */\r\n  @Output() balloonclose: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('balloonclose');\r\n\r\n  /**\r\n   * Opening a balloon on a map.\r\n   */\r\n  @Output() balloonopen: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('balloonopen');\r\n\r\n  /**\r\n   * Event preceding the \"drag\" event.\r\n   */\r\n  @Output() beforedrag: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('beforedrag');\r\n\r\n  /**\r\n   * Event preceding the \"dragstart\" event.\r\n   */\r\n  @Output() beforedragstart: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('beforedragstart');\r\n\r\n  /**\r\n   * Single left-click on the object.\r\n   */\r\n  @Output() yaclick: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('click');\r\n\r\n  /**\r\n   * Calls the element's context menu.\r\n   */\r\n  @Output() yacontextmenu: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('contextmenu');\r\n\r\n  /**\r\n   * Double left-click on the object.\r\n   */\r\n  @Output() yadblclick: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('dblclick');\r\n\r\n  /**\r\n   * Dragging a geo object.\r\n   */\r\n  @Output() yadrag: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('drag');\r\n\r\n  /**\r\n   * End of geo object dragging.\r\n   */\r\n  @Output() yadragend: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('dragend');\r\n\r\n  /**\r\n   * Start of geo object dragging.\r\n   */\r\n  @Output() yadragstart: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('dragstart');\r\n\r\n  /**\r\n   * Change in the state of the editor for the geo object's geometry.\r\n   */\r\n  @Output() editorstatechange: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('editorstatechange');\r\n\r\n  /**\r\n   * Change to the geo object geometry\r\n   */\r\n  @Output() geometrychange: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('geometrychange');\r\n\r\n  /**\r\n   * Closing the hint.\r\n   */\r\n  @Output() hintclose: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('hintclose');\r\n\r\n  /**\r\n   * Opening a hint on a map.\r\n   */\r\n  @Output() hintopen: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('hintopen');\r\n\r\n  /**\r\n   * Map reference changed.\r\n   */\r\n  @Output() mapchange: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('mapchange');\r\n\r\n  /**\r\n   * Pressing the mouse button over the object.\r\n   */\r\n  @Output() yamousedown: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('mousedown');\r\n\r\n  /**\r\n   * Pointing the cursor at the object.\r\n   */\r\n  @Output() yamouseenter: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('mouseenter');\r\n\r\n  /**\r\n   * Moving the cursor off of the object.\r\n   */\r\n  @Output() yamouseleave: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('mouseleave');\r\n\r\n  /**\r\n   * Moving the cursor over the object.\r\n   */\r\n  @Output() yamousemove: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('mousemove');\r\n\r\n  /**\r\n   * Letting go of the mouse button over an object.\r\n   */\r\n  @Output() yamouseup: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('mouseup');\r\n\r\n  /**\r\n   * End of multitouch.\r\n   */\r\n  @Output() multitouchend: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('multitouchend');\r\n\r\n  /**\r\n   * Repeating event during multitouch.\r\n   */\r\n  @Output() multitouchmove: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('multitouchmove');\r\n\r\n  /**\r\n   * Start of multitouch.\r\n   */\r\n  @Output() multitouchstart: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('multitouchstart');\r\n\r\n  /**\r\n   * Change to the object options.\r\n   */\r\n  @Output() optionschange: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('optionschange');\r\n\r\n  /**\r\n   * Change to the geo object overlay.\r\n   */\r\n  @Output() overlaychange: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('overlaychange');\r\n\r\n  /**\r\n   * The parent object reference changed.\r\n   */\r\n  @Output() parentchange: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('parentchange');\r\n\r\n  /**\r\n   * Change to the geo object data.\r\n   */\r\n  @Output() propertieschange: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('propertieschange');\r\n\r\n  /**\r\n   * Mouse wheel scrolling.\r\n   */\r\n  @Output() yawheel: Observable<YaEvent<ymaps.GeoObject>> =\r\n    this._eventManager.getLazyEmitter('wheel');\r\n\r\n  constructor(private readonly _ngZone: NgZone, private readonly _yaMapComponent: YaMapComponent) {}\r\n\r\n  /**\r\n   * Handles input changes and passes them in API.\r\n   * @param changes\r\n   */\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { geoObject } = this;\r\n\r\n    if (geoObject) {\r\n      const { feature, options } = changes;\r\n\r\n      if (feature) {\r\n        this._setFeature(feature.currentValue, geoObject);\r\n      }\r\n\r\n      if (options) {\r\n        geoObject.options.set(options.currentValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this._yaMapComponent.isBrowser) {\r\n      const sub = this._yaMapComponent.map$.subscribe((map) => {\r\n        if (map) {\r\n          const geoObject = this._createGeoObject();\r\n          this.geoObject = geoObject;\r\n\r\n          map.geoObjects.add(geoObject);\r\n          this._eventManager.setTarget(geoObject);\r\n          this._ngZone.run(() => this.ready.emit({ ymaps, target: geoObject }));\r\n        }\r\n      });\r\n\r\n      this._sub.add(sub);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.geoObject) {\r\n      this._yaMapComponent?.map$.value?.geoObjects.remove(this.geoObject);\r\n      this._eventManager.destroy();\r\n    }\r\n\r\n    this._sub.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Destructs feature and passes it in API.\r\n   * @param feature\r\n   * @param geoObject\r\n   */\r\n  private _setFeature(feature: ymaps.IGeoObjectFeature, geoObject: ymaps.GeoObject): void {\r\n    const { geometry, properties } = feature;\r\n\r\n    if (geometry) {\r\n      console.warn(\r\n        'The geometry can not be changed after entity init. To set it, you should recreate a GeoObject with new feature.geometry',\r\n      );\r\n    }\r\n\r\n    if (properties) {\r\n      geoObject.properties.set(properties);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates GeoObject.\r\n   */\r\n  private _createGeoObject(): ymaps.GeoObject {\r\n    return new ymaps.GeoObject(this.feature, this.options);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { YaMapComponent } from '../ya-map/ya-map.component';\r\nimport { EventManager } from '../../event-manager';\r\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\r\nimport { YaEvent } from '../../typings/ya-event';\r\n\r\n/**\r\n * The `ya-placemark` directive wraps `ymaps.Placemark` class from the Yandex Maps API.\r\n * You can configure it via the directive's inputs.\r\n * Events can be bound using the outputs of the directive.\r\n *\r\n * <example-url>https://stackblitz.com/edit/custom-placemark?embed=1</example-url>\r\n *\r\n * @example\r\n * ```html\r\n * <ya-map [center]=\"[55.751952, 37.600739]\">\r\n *   <ya-placemark [geometry]=\"[55.751952, 37.600739]\"></ya-placemark>\r\n * </ya-map>\r\n * ```\r\n */\r\n@Directive({\r\n  selector: 'ya-placemark',\r\n})\r\nexport class YaPlacemarkDirective implements OnInit, OnChanges, OnDestroy {\r\n  private readonly _sub = new Subscription();\r\n\r\n  private readonly _eventManager = new EventManager(this._ngZone);\r\n\r\n  placemark?: ymaps.Placemark;\r\n\r\n  /**\r\n   * Coordinates of the placemark, or a hash describing the geometry, or a reference to the point geometry object.\r\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Placemark.html#Placemark__param-geometry}\r\n   */\r\n  @Input() geometry: number[] | object | ymaps.IPointGeometry;\r\n\r\n  /**\r\n   * Properties for the placemark.\r\n   * {@link https://yandex.com/maps/jsapi/doc/2.1/ref/reference/Placemark-docpage/#Placemarkparam-properties}\r\n   */\r\n  @Input() properties: ymaps.IPlacemarkProperties | ymaps.IDataManager;\r\n\r\n  /**\r\n   * Options for the placemark.\r\n   * {@link https://yandex.com/maps/jsapi/doc/2.1/ref/reference/Placemark-docpage/#Placemarkparam-options}\r\n   */\r\n  @Input() options: ymaps.IPlacemarkOptions;\r\n\r\n  /**\r\n   * Placemark instance is added in a Map.\r\n   */\r\n  @Output() ready: EventEmitter<YaReadyEvent<ymaps.Placemark>> = new EventEmitter<\r\n    YaReadyEvent<ymaps.Placemark>\r\n  >();\r\n\r\n  /**\r\n   * Closing the balloon.\r\n   */\r\n  @Output() balloonclose: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('balloonclose');\r\n\r\n  /**\r\n   * Opening a balloon on a map.\r\n   */\r\n  @Output() balloonopen: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('balloonopen');\r\n\r\n  /**\r\n   * Event preceding the \"drag\" event.\r\n   */\r\n  @Output() beforedrag: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('beforedrag');\r\n\r\n  /**\r\n   * Event preceding the \"dragstart\" event.\r\n   */\r\n  @Output() beforedragstart: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('beforedragstart');\r\n\r\n  /**\r\n   * Single left-click on the object.\r\n   */\r\n  @Output() yaclick: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('click');\r\n\r\n  /**\r\n   * Calls the element's context menu.\r\n   */\r\n  @Output() yacontextmenu: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('contextmenu');\r\n\r\n  /**\r\n   * Double left-click on the object.\r\n   */\r\n  @Output() yadblclick: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('dblclick');\r\n\r\n  /**\r\n   * Dragging a geo object.\r\n   */\r\n  @Output() yadrag: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('drag');\r\n\r\n  /**\r\n   * End of geo object dragging.\r\n   */\r\n  @Output() yadragend: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('dragend');\r\n\r\n  /**\r\n   * Start of geo object dragging.\r\n   */\r\n  @Output() yadragstart: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('dragstart');\r\n\r\n  /**\r\n   * Change in the state of the editor for the geo object's geometry.\r\n   */\r\n  @Output() editorstatechange: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('editorstatechange');\r\n\r\n  /**\r\n   * Change to the geo object geometry\r\n   */\r\n  @Output() geometrychange: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('geometrychange');\r\n\r\n  /**\r\n   * Closing the hint.\r\n   */\r\n  @Output() hintclose: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('hintclose');\r\n\r\n  /**\r\n   * Opening a hint on a map.\r\n   */\r\n  @Output() hintopen: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('hintopen');\r\n\r\n  /**\r\n   * Map reference changed.\r\n   */\r\n  @Output() mapchange: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('mapchange');\r\n\r\n  /**\r\n   * Pressing the mouse button over the object.\r\n   */\r\n  @Output() yamousedown: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('mousedown');\r\n\r\n  /**\r\n   * Pointing the cursor at the object.\r\n   */\r\n  @Output() yamouseenter: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('mouseenter');\r\n\r\n  /**\r\n   * Moving the cursor off of the object.\r\n   */\r\n  @Output() yamouseleave: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('mouseleave');\r\n\r\n  /**\r\n   * Moving the cursor over the object.\r\n   */\r\n  @Output() yamousemove: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('mousemove');\r\n\r\n  /**\r\n   * Letting go of the mouse button over an object.\r\n   */\r\n  @Output() yamouseup: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('mouseup');\r\n\r\n  /**\r\n   * End of multitouch.\r\n   */\r\n  @Output() multitouchend: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('multitouchend');\r\n\r\n  /**\r\n   * Repeating event during multitouch.\r\n   */\r\n  @Output() multitouchmove: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('multitouchmove');\r\n\r\n  /**\r\n   * Start of multitouch.\r\n   */\r\n  @Output() multitouchstart: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('multitouchstart');\r\n\r\n  /**\r\n   * Change to the object options.\r\n   */\r\n  @Output() optionschange: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('optionschange');\r\n\r\n  /**\r\n   * Change to the geo object overlay.\r\n   */\r\n  @Output() overlaychange: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('overlaychange');\r\n\r\n  /**\r\n   * The parent object reference changed.\r\n   */\r\n  @Output() parentchange: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('parentchange');\r\n\r\n  /**\r\n   * Change to the geo object data.\r\n   */\r\n  @Output() propertieschange: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('propertieschange');\r\n\r\n  /**\r\n   * Mouse wheel scrolling.\r\n   */\r\n  @Output() yawheel: Observable<YaEvent<ymaps.Placemark>> =\r\n    this._eventManager.getLazyEmitter('wheel');\r\n\r\n  constructor(private readonly _ngZone: NgZone, private readonly _yaMapComponent: YaMapComponent) {}\r\n\r\n  /**\r\n   * Handles input changes and passes them in API.\r\n   * @param changes\r\n   */\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { placemark } = this;\r\n\r\n    if (placemark) {\r\n      const { geometry, properties, options } = changes;\r\n\r\n      if (geometry) {\r\n        placemark.geometry?.setCoordinates(geometry.currentValue);\r\n      }\r\n\r\n      if (properties) {\r\n        placemark.properties.set(properties.currentValue);\r\n      }\r\n\r\n      if (options) {\r\n        placemark.options.set(options.currentValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this._yaMapComponent.isBrowser) {\r\n      const sub = this._yaMapComponent.map$.subscribe((map) => {\r\n        if (map) {\r\n          const placemark = this._createPlacemark();\r\n          this.placemark = placemark;\r\n\r\n          map.geoObjects.add(placemark);\r\n          this._eventManager.setTarget(placemark);\r\n          this._ngZone.run(() => this.ready.emit({ ymaps, target: placemark }));\r\n        }\r\n      });\r\n\r\n      this._sub.add(sub);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.placemark) {\r\n      this._yaMapComponent?.map$.value?.geoObjects.remove(this.placemark);\r\n      this._eventManager.destroy();\r\n    }\r\n\r\n    this._sub.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Creates a placemark.\r\n   */\r\n  private _createPlacemark(): ymaps.Placemark {\r\n    return new ymaps.Placemark(this.geometry, this.properties, this.options);\r\n  }\r\n}\r\n","import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { YaGeoObjectDirective } from '../ya-geoobject/ya-geoobject.directive';\r\nimport { YaMapComponent } from '../ya-map/ya-map.component';\r\nimport { YaPlacemarkDirective } from '../ya-placemark/ya-placemark.directive';\r\nimport { EventManager } from '../../event-manager';\r\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\r\nimport { YaEvent } from '../../typings/ya-event';\r\n\r\n/**\r\n * The `ya-clusterer` component wraps `ymaps.Clusterer` class from the Yandex Maps API.\r\n * You can configure it via the component's inputs.\r\n * Events can be bound using the outputs of the component.\r\n *\r\n * <example-url>https://stackblitz.com/edit/placemark-clusterer?embed=1</example-url>\r\n *\r\n * @example\r\n * ```html\r\n * <ya-map [center]=\"[55.761952, 37.620739]\">\r\n *   <ya-clusterer [options]=\"{ minClusterSize: 5 }\">\r\n *     <ya-placemark [geometry]=\"[55.74, 37.5]\"></ya-placemark>\r\n *     <ya-placemark [geometry]=\"[55.64, 37.46]\"></ya-placemark>\r\n *     <ya-placemark [geometry]=\"[55.75, 37.38]\"></ya-placemark>\r\n *\r\n *     <ya-geoobject\r\n *       [feature]=\"{ geometry: { type: 'Point', coordinates: [55.81, 37.4] } }\"\r\n *      ></ya-geoobject>\r\n *\r\n *     <ya-geoobject\r\n *       [feature]=\"{ geometry: { type: 'Point', coordinates: [55.7, 37.39] } }\"\r\n *      ></ya-geoobject>\r\n *   </ya-clusterer>\r\n * </ya-map>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ya-clusterer',\r\n  template: '<ng-content></ng-content>',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class YaClustererComponent implements AfterContentInit, OnChanges, OnDestroy {\r\n  @ContentChildren(YaPlacemarkDirective)\r\n  private readonly _placemarks: QueryList<YaPlacemarkDirective>;\r\n\r\n  @ContentChildren(YaGeoObjectDirective)\r\n  private readonly _geoObjects: QueryList<YaGeoObjectDirective>;\r\n\r\n  private readonly _sub = new Subscription();\r\n\r\n  private readonly _eventManager = new EventManager(this._ngZone);\r\n\r\n  private _clusterer?: ymaps.Clusterer;\r\n\r\n  /**\r\n   * Options for the clusterer.\r\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Clusterer.html#Clusterer__param-options}\r\n   */\r\n  @Input() options: ymaps.IClustererOptions;\r\n\r\n  /**\r\n   * Clusterer instance is added in a Map.\r\n   */\r\n  @Output() ready: EventEmitter<YaReadyEvent<ymaps.Clusterer>> = new EventEmitter<\r\n    YaReadyEvent<ymaps.Clusterer>\r\n  >();\r\n\r\n  /**\r\n   * Closing the hint.\r\n   */\r\n  @Output() hintclose: Observable<YaEvent<ymaps.Clusterer>> =\r\n    this._eventManager.getLazyEmitter('hintclose');\r\n\r\n  /**\r\n   * Opening a hint on a map.\r\n   */\r\n  @Output() hintopen: Observable<YaEvent<ymaps.Clusterer>> =\r\n    this._eventManager.getLazyEmitter('hintopen');\r\n\r\n  /**\r\n   * Map reference changed.\r\n   */\r\n  @Output() mapchange: Observable<YaEvent<ymaps.Clusterer>> =\r\n    this._eventManager.getLazyEmitter('mapchange');\r\n\r\n  /**\r\n   * Change to the object options.\r\n   */\r\n  @Output() optionschange: Observable<YaEvent<ymaps.Clusterer>> =\r\n    this._eventManager.getLazyEmitter('optionschange');\r\n\r\n  /**\r\n   * The parent object reference changed.\r\n   */\r\n  @Output() parentchange: Observable<YaEvent<ymaps.Clusterer>> =\r\n    this._eventManager.getLazyEmitter('parentchange');\r\n\r\n  constructor(private readonly _ngZone: NgZone, private readonly _yaMapComponent: YaMapComponent) {}\r\n\r\n  /**\r\n   * Handles input changes and passes them in API.\r\n   * @param changes\r\n   */\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const clusterer = this._clusterer;\r\n\r\n    if (clusterer) {\r\n      const { options } = changes;\r\n\r\n      if (options) {\r\n        clusterer.options.set(options.currentValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (this._yaMapComponent.isBrowser) {\r\n      const sub = this._yaMapComponent.map$.subscribe((map) => {\r\n        if (map) {\r\n          const clusterer = this._createClusterer();\r\n          this._clusterer = clusterer;\r\n\r\n          map.geoObjects.add(clusterer);\r\n          this._eventManager.setTarget(clusterer);\r\n          this._watchForContentChanges(clusterer);\r\n          this._ngZone.run(() => this.ready.emit({ ymaps, target: clusterer }));\r\n        }\r\n      });\r\n\r\n      this._sub.add(sub);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._eventManager.destroy();\r\n    this._sub.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Creates Clusterer.\r\n   */\r\n  private _createClusterer(): ymaps.Clusterer {\r\n    return new ymaps.Clusterer(this.options);\r\n  }\r\n\r\n  private _watchForContentChanges(clusterer: ymaps.Clusterer): void {\r\n    /**\r\n     * Adds new Placemarks to the clusterer on changes.\r\n     */\r\n    const currentPlacemarks = new Set<ymaps.Placemark>();\r\n\r\n    this._getInternalPlacemarks(this._placemarks.toArray()).forEach((placemark) => {\r\n      currentPlacemarks.add(placemark);\r\n      clusterer.add(placemark);\r\n    });\r\n\r\n    const placemarksSub = this._placemarks.changes.subscribe(\r\n      (placemarkDirectives: YaPlacemarkDirective[]) => {\r\n        const newPlacemarks = new Set<ymaps.Placemark>(\r\n          this._getInternalPlacemarks(placemarkDirectives),\r\n        );\r\n\r\n        const difference = this._getDifference<ymaps.Placemark>(newPlacemarks, currentPlacemarks);\r\n\r\n        clusterer.add(difference.toAdd);\r\n        clusterer.remove(difference.toRemove);\r\n      },\r\n    );\r\n\r\n    this._sub.add(placemarksSub);\r\n\r\n    /**\r\n     * Adds new GeoObjects to the clusterer on changes.\r\n     */\r\n    const currentGeoObjects = new Set<ymaps.GeoObject>();\r\n\r\n    this._getInternalGeoObjects(this._geoObjects.toArray()).forEach((geoObject) => {\r\n      currentGeoObjects.add(geoObject);\r\n      clusterer.add(geoObject);\r\n    });\r\n\r\n    const geoObjectsSub = this._geoObjects.changes.subscribe(\r\n      (geoObjectDirectives: YaGeoObjectDirective[]) => {\r\n        const newGeoObjects = new Set<ymaps.GeoObject>(\r\n          this._getInternalGeoObjects(geoObjectDirectives),\r\n        );\r\n\r\n        const difference = this._getDifference<ymaps.GeoObject>(newGeoObjects, currentGeoObjects);\r\n\r\n        clusterer.add(difference.toAdd);\r\n        clusterer.remove(difference.toRemove);\r\n      },\r\n    );\r\n\r\n    this._sub.add(geoObjectsSub);\r\n  }\r\n\r\n  /**\r\n   * Determines what should be added/removed in current set to equal new set\r\n   *\r\n   * @param newSet\r\n   * @param currentSet\r\n   */\r\n  private _getDifference<T>(newSet: Set<T>, currentSet: Set<T>) {\r\n    const toAdd: T[] = [];\r\n    const toRemove: T[] = [];\r\n\r\n    newSet.forEach((component) => {\r\n      if (!currentSet.has(component)) {\r\n        toAdd.push(component);\r\n        currentSet.add(component);\r\n      }\r\n    });\r\n\r\n    currentSet.forEach((component) => {\r\n      if (!newSet.has(component)) {\r\n        toRemove.push(component);\r\n        currentSet.delete(component);\r\n      }\r\n    });\r\n\r\n    return {\r\n      toAdd,\r\n      toRemove,\r\n    };\r\n  }\r\n\r\n  private _getInternalPlacemarks(placemarks: YaPlacemarkDirective[]): ymaps.Placemark[] {\r\n    return placemarks\r\n      .filter((component) => !!component.placemark)\r\n      .map((component) => component.placemark!);\r\n  }\r\n\r\n  private _getInternalGeoObjects(geoObjects: YaGeoObjectDirective[]): ymaps.GeoObject[] {\r\n    return geoObjects\r\n      .filter((component) => !!component.geoObject)\r\n      .map((component) => component.geoObject!);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { YaMapComponent } from '../ya-map/ya-map.component';\r\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\r\n\r\nexport type YaControlType =\r\n  | 'Button'\r\n  | 'FullscreenControl'\r\n  | 'GeolocationControl'\r\n  | 'ListBox'\r\n  | 'ListBoxItem'\r\n  | 'RouteButton'\r\n  | 'RouteEditor'\r\n  | 'RoutePanel'\r\n  | 'RulerControl'\r\n  | 'SearchControl'\r\n  | 'TrafficControl'\r\n  | 'TypeSelector'\r\n  | 'ZoomControl';\r\n\r\n/**\r\n * The `ya-control` component wraps `ymaps.control[YaControlType]` classes from the Yandex Maps API.\r\n * You can configure `ymaps.control[YaControlType]` via the component's inputs.\r\n * API Events can be bound only manually. You can use `ready` event to get an instance.\r\n *\r\n * <example-url>https://stackblitz.com/edit/searchcontrol?embed=1</example-url>\r\n *\r\n * @example\r\n * ```html\r\n * <ya-map [center]=\"[55.761952, 37.620739]\">\r\n *   <ya-control\r\n *     type=\"RoutePanel\"\r\n *     [parameters]=\"{ options: { float: 'right' } }\"\r\n *   ></ya-control>\r\n * </ya-map>\r\n * ```\r\n */\r\n@Directive({\r\n  selector: 'ya-control',\r\n})\r\nexport class YaControlDirective implements OnInit, OnChanges, OnDestroy {\r\n  private readonly _sub = new Subscription();\r\n\r\n  private _control?: any;\r\n\r\n  /**\r\n   * Control type.\r\n   */\r\n  @Input() type: YaControlType;\r\n\r\n  /**\r\n   * Parameters for the Control.\r\n   */\r\n  @Input() parameters: any;\r\n\r\n  /**\r\n   * Control instance is added in a Map.\r\n   */\r\n  @Output() ready: EventEmitter<YaReadyEvent<any>> = new EventEmitter<YaReadyEvent<any>>();\r\n\r\n  constructor(private readonly _ngZone: NgZone, private readonly _yaMapComponent: YaMapComponent) {}\r\n\r\n  ngOnChanges(): void {\r\n    if (this._control) {\r\n      console.warn(\r\n        'Control does not support dynamic configuration. You can config it manually using ymaps or recreate the component with new configuration',\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this._yaMapComponent.isBrowser) {\r\n      const sub = this._yaMapComponent.map$.subscribe((map) => {\r\n        if (map) {\r\n          const control = new ymaps.control[this.type](this.parameters);\r\n          this._control = control;\r\n\r\n          /**\r\n           * RoutePanel ignores state in parameters. API bug\r\n           */\r\n          if (\r\n            control instanceof ymaps.control.RoutePanel &&\r\n            this.parameters &&\r\n            this.parameters.state\r\n          ) {\r\n            control.routePanel.state.set({ ...this.parameters.state });\r\n          }\r\n\r\n          map.controls.add(control);\r\n          this._ngZone.run(() => this.ready.emit({ ymaps, target: control }));\r\n        }\r\n      });\r\n\r\n      this._sub.add(sub);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this._control) {\r\n      this._yaMapComponent?.map$.value?.controls.remove(this._control);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { EventManager } from '../../event-manager';\r\nimport { YaMapComponent } from '../ya-map/ya-map.component';\r\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\r\nimport { YaEvent } from '../../typings/ya-event';\r\n\r\n/**\r\n * @internal\r\n */\r\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\r\n\r\n/**\r\n * The `ya-multiroute` component wraps `ymaps.multiRouter.MultiRoute` class from the Yandex Maps API.\r\n * You can configure it via the component's inputs.\r\n * Events can be bound using the outputs of the component.\r\n *\r\n * <example-url>https://stackblitz.com/edit/multiroute-pedestrian?embed=1</example-url>\r\n *\r\n * @example\r\n * ```html\r\n * <ya-map [center]=\"[55.761952, 37.620739]\">\r\n *   <ya-multiroute\r\n *     [referencePoints]=\"[[55.751952, 37.600739], 'Красные ворота, Москва']\"\r\n *     [model]=\"{ params: { routingMode: 'pedestrian' } }\"\r\n *   ></ya-multiroute>\r\n * </ya-map>\r\n * ```\r\n */\r\n@Directive({\r\n  selector: 'ya-multiroute',\r\n})\r\nexport class YaMultirouteDirective implements OnInit, OnChanges, OnDestroy {\r\n  private readonly _sub = new Subscription();\r\n\r\n  private readonly _eventManager = new EventManager(this._ngZone);\r\n\r\n  private _multiroute?: ymaps.multiRouter.MultiRoute;\r\n\r\n  /**\r\n   * Reference points for the multiroute.\r\n   * Shorthand for [model]=\"{ referencePoints: [0, 0] }\".\r\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/IMultiRouteReferencePoint.html}\r\n   */\r\n  @Input() referencePoints: ymaps.IMultiRouteReferencePoint[];\r\n\r\n  /**\r\n   * Model description object of a multiroute.\r\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/IMultiRouteModelJson.html}\r\n   */\r\n  @Input() model:\r\n    | ymaps.multiRouter.MultiRouteModel\r\n    | Optional<ymaps.IMultiRouteModelJson, 'referencePoints'>;\r\n\r\n  /**\r\n   * Options for the multiroute.\r\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/multiRouter.MultiRoute.html#multiRouter.MultiRoute__param-options}\r\n   */\r\n  @Input() options: ymaps.multiRouter.IMultiRouteOptions;\r\n\r\n  /**\r\n   * Multiroute instance is added in a Map.\r\n   */\r\n  @Output() ready: EventEmitter<YaReadyEvent<ymaps.multiRouter.MultiRoute>> = new EventEmitter<\r\n    YaReadyEvent<ymaps.multiRouter.MultiRoute>\r\n  >();\r\n\r\n  /**\r\n   * Change to the active route.\r\n   */\r\n  @Output() activeroutechange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('activeroutechange');\r\n\r\n  /**\r\n   * Closing the balloon.\r\n   */\r\n  @Output() balloonclose: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('balloonclose');\r\n\r\n  /**\r\n   * Opening a balloon on a map.\r\n   */\r\n  @Output() balloonopen: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('balloonopen');\r\n\r\n  /**\r\n   * The event occurs at the time of setting the map center and its zoom level for optimal display of the multi-route.\r\n   */\r\n  @Output() boundsautoapply: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('boundsautoapply');\r\n\r\n  /**\r\n   * Changing coordinates of the geographical area covering the multi-route.\r\n   */\r\n  @Output() boundschange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('boundschange');\r\n\r\n  /**\r\n   * Single left-click on the object.\r\n   */\r\n  @Output() yaclick: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('click');\r\n\r\n  /**\r\n   * Calls the element's context menu.\r\n   */\r\n  @Output() yacontextmenu: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('contextmenu');\r\n\r\n  /**\r\n   * Double left-click on the object.\r\n   */\r\n  @Output() yadblclick: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('dblclick');\r\n\r\n  /**\r\n   * Change to the geo object geometry.\r\n   */\r\n  @Output() geometrychange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('geometrychange');\r\n\r\n  /**\r\n   * Map reference changed.\r\n   */\r\n  @Output() mapchange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('mapchange');\r\n\r\n  /**\r\n   * Pressing the mouse button over the object.\r\n   */\r\n  @Output() yamousedown: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('mousedown');\r\n\r\n  /**\r\n   * Pointing the cursor at the object.\r\n   */\r\n  @Output() yamouseenter: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('mouseenter');\r\n\r\n  /**\r\n   * Moving the cursor off of the object.\r\n   */\r\n  @Output() yamouseleave: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('mouseleave');\r\n\r\n  /**\r\n   * Moving the cursor over the object.\r\n   */\r\n  @Output() yamousemove: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('mousemove');\r\n\r\n  /**\r\n   * Letting go of the mouse button over an object.\r\n   */\r\n  @Output() yamouseup: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('mouseup');\r\n\r\n  /**\r\n   * End of multitouch.\r\n   */\r\n  @Output() multitouchend: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('multitouchend');\r\n\r\n  /**\r\n   * Repeating event during multitouch.\r\n   */\r\n  @Output() multitouchmove: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('multitouchmove');\r\n\r\n  /**\r\n   * Start of multitouch.\r\n   */\r\n  @Output() multitouchstart: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('multitouchstart');\r\n\r\n  /**\r\n   * Change to the object options.\r\n   */\r\n  @Output() optionschange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('optionschange');\r\n\r\n  /**\r\n   * Change to the geo object overlay.\r\n   */\r\n  @Output() overlaychange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('overlaychange');\r\n\r\n  /**\r\n   * The parent object reference changed.\r\n   */\r\n  @Output() parentchange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('parentchange');\r\n\r\n  /**\r\n   * Changing pixel coordinates of the area covering the multi-route.\r\n   */\r\n  @Output() pixelboundschange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('pixelboundschange');\r\n\r\n  /**\r\n   * Change to the geo object data.\r\n   */\r\n  @Output() propertieschange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('propertieschange');\r\n\r\n  /**\r\n   * Updating the multi-route.\r\n   */\r\n  @Output() update: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('update');\r\n\r\n  /**\r\n   * Mouse wheel scrolling.\r\n   */\r\n  @Output() yawheel: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\r\n    this._eventManager.getLazyEmitter('wheel');\r\n\r\n  constructor(private readonly _ngZone: NgZone, private readonly _yaMapComponent: YaMapComponent) {}\r\n\r\n  /**\r\n   * Handles input changes and passes them in API.\r\n   * @param changes\r\n   */\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const multiroute = this._multiroute;\r\n\r\n    if (multiroute) {\r\n      const { referencePoints, model, options } = changes;\r\n\r\n      if (model) {\r\n        this._setModel(model.currentValue, multiroute);\r\n      }\r\n\r\n      if (referencePoints) {\r\n        multiroute.model.setReferencePoints(referencePoints.currentValue);\r\n      }\r\n\r\n      if (options) {\r\n        multiroute.options.set(options.currentValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this._yaMapComponent.isBrowser) {\r\n      const sub = this._yaMapComponent.map$.subscribe((map) => {\r\n        if (map) {\r\n          const multiroute = this._createMultiroute();\r\n          this._multiroute = multiroute;\r\n\r\n          map.geoObjects.add(multiroute);\r\n          this._eventManager.setTarget(multiroute);\r\n          this._ngZone.run(() => this.ready.emit({ ymaps, target: multiroute }));\r\n        }\r\n      });\r\n\r\n      this._sub.add(sub);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this._multiroute) {\r\n      this._yaMapComponent?.map$.value?.geoObjects.remove(this._multiroute);\r\n      this._eventManager.destroy();\r\n    }\r\n\r\n    this._sub.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Destructs state and passes them in API.\r\n   * @param model\r\n   * @param multiroute\r\n   */\r\n  private _setModel(\r\n    model: ymaps.IMultiRouteModelJson,\r\n    multiroute: ymaps.multiRouter.MultiRoute,\r\n  ): void {\r\n    const { referencePoints, params } = model;\r\n\r\n    if (referencePoints) {\r\n      multiroute.model.setReferencePoints(referencePoints);\r\n    }\r\n\r\n    if (params) {\r\n      multiroute.model.setParams(params);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates Multiroute.\r\n   */\r\n  private _createMultiroute(): ymaps.multiRouter.MultiRoute {\r\n    return new ymaps.multiRouter.MultiRoute(this._combineModel(), this.options);\r\n  }\r\n\r\n  /**\r\n   * Combines the model and reference points into single object\r\n   */\r\n  private _combineModel(): ymaps.IMultiRouteModelJson {\r\n    const model = (this.model || {}) as ymaps.IMultiRouteModelJson;\r\n\r\n    return {\r\n      ...model,\r\n      referencePoints: this.referencePoints || model.referencePoints,\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { from, Observable, Subscription } from 'rxjs';\r\nimport { filter, map, switchMap } from 'rxjs/operators';\r\nimport { EventManager } from '../../event-manager';\r\nimport { YaMapComponent } from '../ya-map/ya-map.component';\r\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\r\nimport { YaEvent } from '../../typings/ya-event';\r\n\r\n/**\r\n * The `ya-panorama` component wraps `ymaps.panorama.Player` class from the Yandex Maps API.\r\n * You can configure it via the component's inputs.\r\n * Events can be bound using the outputs of the component.\r\n *\r\n * <example-url>https://stackblitz.com/edit/panorama?embed=1</example-url>\r\n *\r\n * @example\r\n * ```html\r\n * <ya-map>\r\n *   <ya-panorama [point]=\"[59.938557, 30.316198]\" layer=\"yandex#airPanorama\"></ya-panorama>\r\n * </ya-map>\r\n * ```\r\n */\r\n@Directive({\r\n  selector: 'ya-panorama',\r\n})\r\nexport class YaPanoramaDirective implements OnInit, OnChanges, OnDestroy {\r\n  private readonly _sub = new Subscription();\r\n\r\n  private readonly _eventManager = new EventManager(this._ngZone);\r\n\r\n  private _player?: ymaps.panorama.Player;\r\n\r\n  /**\r\n   * The point for searching for nearby panoramas.\r\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/panorama.locate.html#panorama.locate__param-point}\r\n   */\r\n  @Input() point: number[];\r\n\r\n  /**\r\n   * The layer to search for panoramas.\r\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/panorama.locate.html#panorama.locate__param-options.layer}\r\n   */\r\n  @Input() layer: ymaps.panorama.Layer;\r\n\r\n  /**\r\n   * Options for the player.\r\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/panorama.Player.html#panorama.Player__param-options}\r\n   */\r\n  @Input() options: ymaps.panorama.IPlayerOptions;\r\n\r\n  /**\r\n   * Panorama instance is created.\r\n   */\r\n  @Output() ready: EventEmitter<YaReadyEvent<ymaps.panorama.Player>> = new EventEmitter<\r\n    YaReadyEvent<ymaps.panorama.Player>\r\n  >();\r\n\r\n  /**\r\n   * The player was closed by the user or destroyed using the panorama.Player.destroy method.\r\n   */\r\n  @Output() destroy: Observable<YaEvent<ymaps.panorama.Player>> =\r\n    this._eventManager.getLazyEmitter('destroy');\r\n\r\n  /**\r\n   * The view direction changed.\r\n   */\r\n  @Output() directionchange: Observable<YaEvent<ymaps.panorama.Player>> =\r\n    this._eventManager.getLazyEmitter('directionchange');\r\n\r\n  /**\r\n   * An error occurred during operation of the player. The user will be shown the appropriate screen.\r\n   */\r\n  @Output() yaerror: Observable<YaEvent<ymaps.panorama.Player>> =\r\n    this._eventManager.getLazyEmitter('error');\r\n\r\n  /**\r\n   * The panorama player switched to full-screen mode.\r\n   */\r\n  @Output() fullscreenenter: Observable<YaEvent<ymaps.panorama.Player>> =\r\n    this._eventManager.getLazyEmitter('fullscreenenter');\r\n\r\n  /**\r\n   * The panorama player exited full-screen mode.\r\n   */\r\n  @Output() fullscreenexit: Observable<YaEvent<ymaps.panorama.Player>> =\r\n    this._eventManager.getLazyEmitter('fullscreenexit');\r\n\r\n  /**\r\n   * The user clicked on an expanded marker.\r\n   */\r\n  @Output() markercollapse: Observable<YaEvent<ymaps.panorama.Player>> =\r\n    this._eventManager.getLazyEmitter('markercollapse');\r\n\r\n  /**\r\n   * The user clicked on a collapsed marker.\r\n   */\r\n  @Output() markerexpand: Observable<YaEvent<ymaps.panorama.Player>> =\r\n    this._eventManager.getLazyEmitter('markerexpand');\r\n\r\n  /**\r\n   * The user's cursor hovered over a marker.\r\n   */\r\n  @Output() markermouseenter: Observable<YaEvent<ymaps.panorama.Player>> =\r\n    this._eventManager.getLazyEmitter('markermouseenter');\r\n\r\n  /**\r\n   * The user's cursor left a marker.\r\n   */\r\n  @Output() markermouseleave: Observable<YaEvent<ymaps.panorama.Player>> =\r\n    this._eventManager.getLazyEmitter('markermouseleave');\r\n\r\n  /**\r\n   * The open panorama changed.\r\n   */\r\n  @Output() panoramachange: Observable<YaEvent<ymaps.panorama.Player>> =\r\n    this._eventManager.getLazyEmitter('panoramachange');\r\n\r\n  /**\r\n   * The size of the viewport has been changed.\r\n   */\r\n  @Output() spanchange: Observable<YaEvent<ymaps.panorama.Player>> =\r\n    this._eventManager.getLazyEmitter('spanchange');\r\n\r\n  constructor(private readonly _ngZone: NgZone, private readonly _yaMapComponent: YaMapComponent) {}\r\n\r\n  /**\r\n   * Handles input changes and passes them in API.\r\n   * @param changes\r\n   */\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const player = this._player;\r\n\r\n    if (player) {\r\n      const { point, layer, options } = changes;\r\n\r\n      /**\r\n       * player.moveTo resets values to default if any of them isn't passed.\r\n       * That's why we use value from currentValue OR previous value from input.\r\n       * With that logic it's possible to pass only point, layer or options.\r\n       */\r\n      if (point || layer) {\r\n        const combinedPoint: number[] = point?.currentValue || this.point;\r\n        const combinedLayer: ymaps.panorama.Layer = layer?.currentValue || this.layer;\r\n\r\n        player.moveTo(combinedPoint, { layer: combinedLayer });\r\n      }\r\n\r\n      if (options) {\r\n        this._setOptions(options.currentValue, player);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this._yaMapComponent.isBrowser) {\r\n      const panorama$ = this._yaMapComponent.map$.pipe(\r\n        filter((m): m is ymaps.Map => Boolean(m)),\r\n        switchMap((m: ymaps.Map) => {\r\n          /**\r\n           * Map and panorama use the same container, so need to destroy/remove map\r\n           */\r\n          m.destroy();\r\n          return this._createPanorama();\r\n        }),\r\n      );\r\n\r\n      const sub = panorama$.subscribe((panorama) => {\r\n        const { id } = this._yaMapComponent.container.nativeElement;\r\n        const player = new ymaps.panorama.Player(id, panorama, this.options);\r\n        this._player = player;\r\n\r\n        this._eventManager.setTarget(player);\r\n        this._ngZone.run(() => this.ready.emit({ ymaps, target: player }));\r\n      });\r\n\r\n      this._sub.add(sub);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._eventManager.destroy();\r\n    this._sub.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Destructs state and passes it in API.\r\n   * @param options\r\n   * @param player\r\n   */\r\n  private _setOptions(options: ymaps.panorama.IPlayerOptions, player: ymaps.panorama.Player): void {\r\n    const {\r\n      autoFitToViewport,\r\n      controls,\r\n      direction,\r\n      hotkeysEnabled,\r\n      span,\r\n      scrollZoomBehavior,\r\n      suppressMapOpenBlock,\r\n    } = options;\r\n\r\n    if (\r\n      autoFitToViewport ||\r\n      controls ||\r\n      hotkeysEnabled ||\r\n      scrollZoomBehavior ||\r\n      suppressMapOpenBlock\r\n    ) {\r\n      console.warn(\r\n        'Only direction and span can be set after entity init. To set other options, you should recreate a Panorama with new options',\r\n      );\r\n    }\r\n\r\n    if (direction) {\r\n      player.setDirection(direction);\r\n    }\r\n\r\n    if (span) {\r\n      player.setSpan(span);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Searches for a panorama and returns first\r\n   */\r\n  private _createPanorama(): Observable<ymaps.IPanorama> {\r\n    return from(ymaps.panorama.locate(this.point, { layer: this.layer })).pipe(\r\n      map((panoramas) => panoramas[0]),\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { YA_CONFIG, YaConfig } from './services/ya-api-loader/ya-api-loader.service';\n\nimport { YaClustererComponent } from './components/ya-clusterer/ya-clusterer.component';\nimport { YaControlDirective } from './components/ya-control/ya-control.directive';\nimport { YaGeoObjectDirective } from './components/ya-geoobject/ya-geoobject.directive';\nimport { YaMapComponent } from './components/ya-map/ya-map.component';\nimport { YaMultirouteDirective } from './components/ya-multiroute/ya-multiroute.directive';\nimport { YaPanoramaDirective } from './components/ya-panorama/ya-panorama.directive';\nimport { YaPlacemarkDirective } from './components/ya-placemark/ya-placemark.directive';\n\n@NgModule({\n  declarations: [\n    YaClustererComponent,\n    YaControlDirective,\n    YaGeoObjectDirective,\n    YaMapComponent,\n    YaMultirouteDirective,\n    YaPanoramaDirective,\n    YaPlacemarkDirective,\n  ],\n  imports: [CommonModule],\n  exports: [\n    YaClustererComponent,\n    YaControlDirective,\n    YaGeoObjectDirective,\n    YaMapComponent,\n    YaMultirouteDirective,\n    YaPanoramaDirective,\n    YaPlacemarkDirective,\n  ],\n})\nexport class AngularYandexMapsModule {\n  /**\n   * Please use this method when you register the module at the root level\n   * @param config\n   */\n  static forRoot(config: YaConfig): ModuleWithProviders<AngularYandexMapsModule> {\n    return {\n      ngModule: AngularYandexMapsModule,\n      providers: [{ provide: YA_CONFIG, useValue: config }],\n    };\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { from, Observable } from 'rxjs';\r\nimport { YaApiLoaderService } from '../ya-api-loader/ya-api-loader.service';\r\n\r\n/**\r\n * The `YaGeocoder` service wraps `ymaps.geocode` static function from the Yandex Maps API.\r\n *\r\n * @example\r\n * ```ts\r\n * import { YaGeocoderService } from 'angular8-yandex-maps';\r\n *\r\n * export class AppComponent {\r\n *   constructor(private yaGeocoderService: YaGeocoderService) {\r\n *     this.yaGeocoderService.geocode('Moscow')\r\n *       .subscribe(v => console.log(v))\r\n *   }\r\n * }\r\n * ```\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class YaGeocoderService {\r\n  constructor(\r\n    private readonly _ngZone: NgZone,\r\n    private readonly _yaApiLoaderService: YaApiLoaderService,\r\n  ) {}\r\n\r\n  /**\r\n   * Processes geocoding requests\r\n   * @param request\r\n   * @param options\r\n   */\r\n  geocode(request: string | number[], options?: ymaps.IGeocodeOptions): Observable<object> {\r\n    return this._yaApiLoaderService.load().pipe(\r\n      switchMap(() => from(ymaps.geocode(request, options))),\r\n      switchMap(\r\n        (result) =>\r\n          new Observable<object>((observer) => {\r\n            this._ngZone.run(() => {\r\n              observer.next(result);\r\n              observer.complete();\r\n            });\r\n          }),\r\n      ),\r\n    );\r\n  }\r\n}\r\n","/// <reference path=\"./lib/typings/yandex-maps/index.ts\" />\r\n\r\n/*\r\n * Public API Surface of angular8-yandex-maps\r\n */\r\n\r\n// Module\r\nexport * from './lib/angular-yandex-maps.module';\r\n\r\n// Services\r\nexport * from './lib/services/ya-api-loader/ya-api-loader.service';\r\nexport * from './lib/services/ya-geocoder/ya-geocoder.service';\r\n\r\n// Interfaces\r\nexport * from './lib/typings/ya-event';\r\nexport * from './lib/typings/ya-ready-event';\r\n\r\n// Components\r\nexport * from './lib/components/ya-clusterer/ya-clusterer.component';\r\nexport * from './lib/components/ya-control/ya-control.directive';\r\nexport * from './lib/components/ya-geoobject/ya-geoobject.directive';\r\nexport * from './lib/components/ya-map/ya-map.component';\r\nexport * from './lib/components/ya-multiroute/ya-multiroute.directive';\r\nexport * from './lib/components/ya-panorama/ya-panorama.directive';\r\nexport * from './lib/components/ya-placemark/ya-placemark.directive';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}