{"version":3,"file":"ya-panorama.directive.d.ts","sources":["ya-panorama.directive.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { YaMapComponent } from '../ya-map/ya-map.component';\r\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\r\nimport { YaEvent } from '../../typings/ya-event';\r\n/**\r\n * The `ya-panorama` component wraps `ymaps.panorama.Player` class from the Yandex Maps API.\r\n * You can configure it via the component's inputs.\r\n * Events can be bound using the outputs of the component.\r\n *\r\n * <example-url>https://stackblitz.com/edit/panorama?embed=1</example-url>\r\n *\r\n * @example\r\n * ```html\r\n * <ya-map>\r\n *   <ya-panorama [point]=\"[59.938557, 30.316198]\" layer=\"yandex#airPanorama\"></ya-panorama>\r\n * </ya-map>\r\n * ```\r\n */\r\nexport declare class YaPanoramaDirective implements OnInit, OnChanges, OnDestroy {\r\n    private readonly _ngZone;\r\n    private readonly _yaMapComponent;\r\n    private readonly _sub;\r\n    private readonly _eventManager;\r\n    private _player?;\r\n    /**\r\n     * The point for searching for nearby panoramas.\r\n     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/panorama.locate.html#panorama.locate__param-point}\r\n     */\r\n    point: number[];\r\n    /**\r\n     * The layer to search for panoramas.\r\n     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/panorama.locate.html#panorama.locate__param-options.layer}\r\n     */\r\n    layer: ymaps.panorama.Layer;\r\n    /**\r\n     * Options for the player.\r\n     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/panorama.Player.html#panorama.Player__param-options}\r\n     */\r\n    options: ymaps.panorama.IPlayerOptions;\r\n    /**\r\n     * Panorama instance is created.\r\n     */\r\n    ready: EventEmitter<YaReadyEvent<ymaps.panorama.Player>>;\r\n    /**\r\n     * The player was closed by the user or destroyed using the panorama.Player.destroy method.\r\n     */\r\n    destroy: Observable<YaEvent<ymaps.panorama.Player>>;\r\n    /**\r\n     * The view direction changed.\r\n     */\r\n    directionchange: Observable<YaEvent<ymaps.panorama.Player>>;\r\n    /**\r\n     * An error occurred during operation of the player. The user will be shown the appropriate screen.\r\n     */\r\n    yaerror: Observable<YaEvent<ymaps.panorama.Player>>;\r\n    /**\r\n     * The panorama player switched to full-screen mode.\r\n     */\r\n    fullscreenenter: Observable<YaEvent<ymaps.panorama.Player>>;\r\n    /**\r\n     * The panorama player exited full-screen mode.\r\n     */\r\n    fullscreenexit: Observable<YaEvent<ymaps.panorama.Player>>;\r\n    /**\r\n     * The user clicked on an expanded marker.\r\n     */\r\n    markercollapse: Observable<YaEvent<ymaps.panorama.Player>>;\r\n    /**\r\n     * The user clicked on a collapsed marker.\r\n     */\r\n    markerexpand: Observable<YaEvent<ymaps.panorama.Player>>;\r\n    /**\r\n     * The user's cursor hovered over a marker.\r\n     */\r\n    markermouseenter: Observable<YaEvent<ymaps.panorama.Player>>;\r\n    /**\r\n     * The user's cursor left a marker.\r\n     */\r\n    markermouseleave: Observable<YaEvent<ymaps.panorama.Player>>;\r\n    /**\r\n     * The open panorama changed.\r\n     */\r\n    panoramachange: Observable<YaEvent<ymaps.panorama.Player>>;\r\n    /**\r\n     * The size of the viewport has been changed.\r\n     */\r\n    spanchange: Observable<YaEvent<ymaps.panorama.Player>>;\r\n    constructor(_ngZone: NgZone, _yaMapComponent: YaMapComponent);\r\n    /**\r\n     * Handles input changes and passes them in API.\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * Destructs state and passes it in API.\r\n     * @param options\r\n     * @param player\r\n     */\r\n    private _setOptions;\r\n    /**\r\n     * Searches for a panorama and returns first\r\n     */\r\n    private _createPanorama;\r\n}\r\n"]}