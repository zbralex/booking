import { AfterContentInit, EventEmitter, NgZone, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { Observable } from 'rxjs';
import { YaMapComponent } from '../ya-map/ya-map.component';
import { YaReadyEvent } from '../../typings/ya-ready-event';
import { YaEvent } from '../../typings/ya-event';
/**
 * The `ya-clusterer` component wraps `ymaps.Clusterer` class from the Yandex Maps API.
 * You can configure it via the component's inputs.
 * Events can be bound using the outputs of the component.
 *
 * <example-url>https://stackblitz.com/edit/placemark-clusterer?embed=1</example-url>
 *
 * @example
 * ```html
 * <ya-map [center]="[55.761952, 37.620739]">
 *   <ya-clusterer [options]="{ minClusterSize: 5 }">
 *     <ya-placemark [geometry]="[55.74, 37.5]"></ya-placemark>
 *     <ya-placemark [geometry]="[55.64, 37.46]"></ya-placemark>
 *     <ya-placemark [geometry]="[55.75, 37.38]"></ya-placemark>
 *
 *     <ya-geoobject
 *       [feature]="{ geometry: { type: 'Point', coordinates: [55.81, 37.4] } }"
 *      ></ya-geoobject>
 *
 *     <ya-geoobject
 *       [feature]="{ geometry: { type: 'Point', coordinates: [55.7, 37.39] } }"
 *      ></ya-geoobject>
 *   </ya-clusterer>
 * </ya-map>
 * ```
 */
export declare class YaClustererComponent implements AfterContentInit, OnChanges, OnDestroy {
    private readonly _ngZone;
    private readonly _yaMapComponent;
    private readonly _placemarks;
    private readonly _geoObjects;
    private readonly _sub;
    private readonly _eventManager;
    private _clusterer?;
    /**
     * Options for the clusterer.
     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Clusterer.html#Clusterer__param-options}
     */
    options: ymaps.IClustererOptions;
    /**
     * Clusterer instance is added in a Map.
     */
    ready: EventEmitter<YaReadyEvent<ymaps.Clusterer>>;
    /**
     * Closing the hint.
     */
    hintclose: Observable<YaEvent<ymaps.Clusterer>>;
    /**
     * Opening a hint on a map.
     */
    hintopen: Observable<YaEvent<ymaps.Clusterer>>;
    /**
     * Map reference changed.
     */
    mapchange: Observable<YaEvent<ymaps.Clusterer>>;
    /**
     * Change to the object options.
     */
    optionschange: Observable<YaEvent<ymaps.Clusterer>>;
    /**
     * The parent object reference changed.
     */
    parentchange: Observable<YaEvent<ymaps.Clusterer>>;
    constructor(_ngZone: NgZone, _yaMapComponent: YaMapComponent);
    /**
     * Handles input changes and passes them in API.
     * @param changes
     */
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    /**
     * Creates Clusterer.
     */
    private _createClusterer;
    private _watchForContentChanges;
    /**
     * Determines what should be added/removed in current set to equal new set
     *
     * @param newSet
     * @param currentSet
     */
    private _getDifference;
    private _getInternalPlacemarks;
    private _getInternalGeoObjects;
}
