{"version":3,"file":"ya-placemark.directive.d.ts","sources":["ya-placemark.directive.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { YaMapComponent } from '../ya-map/ya-map.component';\r\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\r\nimport { YaEvent } from '../../typings/ya-event';\r\n/**\r\n * The `ya-placemark` directive wraps `ymaps.Placemark` class from the Yandex Maps API.\r\n * You can configure it via the directive's inputs.\r\n * Events can be bound using the outputs of the directive.\r\n *\r\n * <example-url>https://stackblitz.com/edit/custom-placemark?embed=1</example-url>\r\n *\r\n * @example\r\n * ```html\r\n * <ya-map [center]=\"[55.751952, 37.600739]\">\r\n *   <ya-placemark [geometry]=\"[55.751952, 37.600739]\"></ya-placemark>\r\n * </ya-map>\r\n * ```\r\n */\r\nexport declare class YaPlacemarkDirective implements OnInit, OnChanges, OnDestroy {\r\n    private readonly _ngZone;\r\n    private readonly _yaMapComponent;\r\n    private readonly _sub;\r\n    private readonly _eventManager;\r\n    placemark?: ymaps.Placemark;\r\n    /**\r\n     * Coordinates of the placemark, or a hash describing the geometry, or a reference to the point geometry object.\r\n     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Placemark.html#Placemark__param-geometry}\r\n     */\r\n    geometry: number[] | object | ymaps.IPointGeometry;\r\n    /**\r\n     * Properties for the placemark.\r\n     * {@link https://yandex.com/maps/jsapi/doc/2.1/ref/reference/Placemark-docpage/#Placemarkparam-properties}\r\n     */\r\n    properties: ymaps.IPlacemarkProperties | ymaps.IDataManager;\r\n    /**\r\n     * Options for the placemark.\r\n     * {@link https://yandex.com/maps/jsapi/doc/2.1/ref/reference/Placemark-docpage/#Placemarkparam-options}\r\n     */\r\n    options: ymaps.IPlacemarkOptions;\r\n    /**\r\n     * Placemark instance is added in a Map.\r\n     */\r\n    ready: EventEmitter<YaReadyEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Closing the balloon.\r\n     */\r\n    balloonclose: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Opening a balloon on a map.\r\n     */\r\n    balloonopen: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Event preceding the \"drag\" event.\r\n     */\r\n    beforedrag: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Event preceding the \"dragstart\" event.\r\n     */\r\n    beforedragstart: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Single left-click on the object.\r\n     */\r\n    yaclick: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Calls the element's context menu.\r\n     */\r\n    yacontextmenu: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Double left-click on the object.\r\n     */\r\n    yadblclick: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Dragging a geo object.\r\n     */\r\n    yadrag: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * End of geo object dragging.\r\n     */\r\n    yadragend: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Start of geo object dragging.\r\n     */\r\n    yadragstart: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Change in the state of the editor for the geo object's geometry.\r\n     */\r\n    editorstatechange: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Change to the geo object geometry\r\n     */\r\n    geometrychange: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Closing the hint.\r\n     */\r\n    hintclose: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Opening a hint on a map.\r\n     */\r\n    hintopen: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Map reference changed.\r\n     */\r\n    mapchange: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Pressing the mouse button over the object.\r\n     */\r\n    yamousedown: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Pointing the cursor at the object.\r\n     */\r\n    yamouseenter: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Moving the cursor off of the object.\r\n     */\r\n    yamouseleave: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Moving the cursor over the object.\r\n     */\r\n    yamousemove: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Letting go of the mouse button over an object.\r\n     */\r\n    yamouseup: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * End of multitouch.\r\n     */\r\n    multitouchend: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Repeating event during multitouch.\r\n     */\r\n    multitouchmove: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Start of multitouch.\r\n     */\r\n    multitouchstart: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Change to the object options.\r\n     */\r\n    optionschange: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Change to the geo object overlay.\r\n     */\r\n    overlaychange: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * The parent object reference changed.\r\n     */\r\n    parentchange: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Change to the geo object data.\r\n     */\r\n    propertieschange: Observable<YaEvent<ymaps.Placemark>>;\r\n    /**\r\n     * Mouse wheel scrolling.\r\n     */\r\n    yawheel: Observable<YaEvent<ymaps.Placemark>>;\r\n    constructor(_ngZone: NgZone, _yaMapComponent: YaMapComponent);\r\n    /**\r\n     * Handles input changes and passes them in API.\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * Creates a placemark.\r\n     */\r\n    private _createPlacemark;\r\n}\r\n"]}