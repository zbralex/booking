{"version":3,"file":"ya-multiroute.directive.d.ts","sources":["ya-multiroute.directive.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { YaMapComponent } from '../ya-map/ya-map.component';\r\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\r\nimport { YaEvent } from '../../typings/ya-event';\r\n/**\r\n * @internal\r\n */\r\ndeclare type Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\r\n/**\r\n * The `ya-multiroute` component wraps `ymaps.multiRouter.MultiRoute` class from the Yandex Maps API.\r\n * You can configure it via the component's inputs.\r\n * Events can be bound using the outputs of the component.\r\n *\r\n * <example-url>https://stackblitz.com/edit/multiroute-pedestrian?embed=1</example-url>\r\n *\r\n * @example\r\n * ```html\r\n * <ya-map [center]=\"[55.761952, 37.620739]\">\r\n *   <ya-multiroute\r\n *     [referencePoints]=\"[[55.751952, 37.600739], 'Красные ворота, Москва']\"\r\n *     [model]=\"{ params: { routingMode: 'pedestrian' } }\"\r\n *   ></ya-multiroute>\r\n * </ya-map>\r\n * ```\r\n */\r\nexport declare class YaMultirouteDirective implements OnInit, OnChanges, OnDestroy {\r\n    private readonly _ngZone;\r\n    private readonly _yaMapComponent;\r\n    private readonly _sub;\r\n    private readonly _eventManager;\r\n    private _multiroute?;\r\n    /**\r\n     * Reference points for the multiroute.\r\n     * Shorthand for [model]=\"{ referencePoints: [0, 0] }\".\r\n     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/IMultiRouteReferencePoint.html}\r\n     */\r\n    referencePoints: ymaps.IMultiRouteReferencePoint[];\r\n    /**\r\n     * Model description object of a multiroute.\r\n     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/IMultiRouteModelJson.html}\r\n     */\r\n    model: ymaps.multiRouter.MultiRouteModel | Optional<ymaps.IMultiRouteModelJson, 'referencePoints'>;\r\n    /**\r\n     * Options for the multiroute.\r\n     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/multiRouter.MultiRoute.html#multiRouter.MultiRoute__param-options}\r\n     */\r\n    options: ymaps.multiRouter.IMultiRouteOptions;\r\n    /**\r\n     * Multiroute instance is added in a Map.\r\n     */\r\n    ready: EventEmitter<YaReadyEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Change to the active route.\r\n     */\r\n    activeroutechange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Closing the balloon.\r\n     */\r\n    balloonclose: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Opening a balloon on a map.\r\n     */\r\n    balloonopen: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * The event occurs at the time of setting the map center and its zoom level for optimal display of the multi-route.\r\n     */\r\n    boundsautoapply: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Changing coordinates of the geographical area covering the multi-route.\r\n     */\r\n    boundschange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Single left-click on the object.\r\n     */\r\n    yaclick: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Calls the element's context menu.\r\n     */\r\n    yacontextmenu: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Double left-click on the object.\r\n     */\r\n    yadblclick: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Change to the geo object geometry.\r\n     */\r\n    geometrychange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Map reference changed.\r\n     */\r\n    mapchange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Pressing the mouse button over the object.\r\n     */\r\n    yamousedown: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Pointing the cursor at the object.\r\n     */\r\n    yamouseenter: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Moving the cursor off of the object.\r\n     */\r\n    yamouseleave: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Moving the cursor over the object.\r\n     */\r\n    yamousemove: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Letting go of the mouse button over an object.\r\n     */\r\n    yamouseup: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * End of multitouch.\r\n     */\r\n    multitouchend: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Repeating event during multitouch.\r\n     */\r\n    multitouchmove: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Start of multitouch.\r\n     */\r\n    multitouchstart: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Change to the object options.\r\n     */\r\n    optionschange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Change to the geo object overlay.\r\n     */\r\n    overlaychange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * The parent object reference changed.\r\n     */\r\n    parentchange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Changing pixel coordinates of the area covering the multi-route.\r\n     */\r\n    pixelboundschange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Change to the geo object data.\r\n     */\r\n    propertieschange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Updating the multi-route.\r\n     */\r\n    update: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    /**\r\n     * Mouse wheel scrolling.\r\n     */\r\n    yawheel: Observable<YaEvent<ymaps.multiRouter.MultiRoute>>;\r\n    constructor(_ngZone: NgZone, _yaMapComponent: YaMapComponent);\r\n    /**\r\n     * Handles input changes and passes them in API.\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * Destructs state and passes them in API.\r\n     * @param model\r\n     * @param multiroute\r\n     */\r\n    private _setModel;\r\n    /**\r\n     * Creates Multiroute.\r\n     */\r\n    private _createMultiroute;\r\n    /**\r\n     * Combines the model and reference points into single object\r\n     */\r\n    private _combineModel;\r\n}\r\nexport {};\r\n"]}