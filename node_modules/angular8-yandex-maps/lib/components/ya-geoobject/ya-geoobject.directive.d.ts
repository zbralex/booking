import { EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { Observable } from 'rxjs';
import { YaMapComponent } from '../ya-map/ya-map.component';
import { YaReadyEvent } from '../../typings/ya-ready-event';
import { YaEvent } from '../../typings/ya-event';
/**
 * The `ya-geoobject` component wraps `ymaps.GeoObject` class from the Yandex Maps API.
 * You can configure it via the component's inputs.
 * Events can be bound using the outputs of the component.
 *
 * <example-url>https://stackblitz.com/edit/geoobject-polygon?embed=1</example-url>
 *
 * @example
 * ```html
 * <ya-map [center]="[55.761952, 37.620739]">
 *   <ya-geoobject
 *     [feature]="{ geometry: { type: 'Rectangle', coordinates: [[55.665, 37.66], [55.64,37.53]] } }"
 *   ></ya-geoobject>
 * </ya-map>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class YaGeoObjectDirective implements OnInit, OnChanges, OnDestroy {
    private readonly _ngZone;
    private readonly _yaMapComponent;
    private readonly _sub;
    private readonly _eventManager;
    geoObject?: ymaps.GeoObject;
    /**
     * Feature for the GeoObject.
     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/GeoObject.html#GeoObjectparam-feature}
     */
    feature: ymaps.IGeoObjectFeature;
    /**
     * Options for the GeoObject.
     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/GeoObject.html#GeoObjectparam-options}
     */
    options: ymaps.IGeoObjectOptions;
    /**
     * GeoObject instance is added in a Map.
     */
    ready: EventEmitter<YaReadyEvent<ymaps.GeoObject>>;
    /**
     * Closing the balloon.
     */
    balloonclose: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Opening a balloon on a map.
     */
    balloonopen: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Event preceding the "drag" event.
     */
    beforedrag: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Event preceding the "dragstart" event.
     */
    beforedragstart: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Single left-click on the object.
     */
    yaclick: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Calls the element's context menu.
     */
    yacontextmenu: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Double left-click on the object.
     */
    yadblclick: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Dragging a geo object.
     */
    yadrag: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * End of geo object dragging.
     */
    yadragend: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Start of geo object dragging.
     */
    yadragstart: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Change in the state of the editor for the geo object's geometry.
     */
    editorstatechange: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Change to the geo object geometry
     */
    geometrychange: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Closing the hint.
     */
    hintclose: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Opening a hint on a map.
     */
    hintopen: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Map reference changed.
     */
    mapchange: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Pressing the mouse button over the object.
     */
    yamousedown: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Pointing the cursor at the object.
     */
    yamouseenter: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Moving the cursor off of the object.
     */
    yamouseleave: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Moving the cursor over the object.
     */
    yamousemove: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Letting go of the mouse button over an object.
     */
    yamouseup: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * End of multitouch.
     */
    multitouchend: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Repeating event during multitouch.
     */
    multitouchmove: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Start of multitouch.
     */
    multitouchstart: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Change to the object options.
     */
    optionschange: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Change to the geo object overlay.
     */
    overlaychange: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * The parent object reference changed.
     */
    parentchange: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Change to the geo object data.
     */
    propertieschange: Observable<YaEvent<ymaps.GeoObject>>;
    /**
     * Mouse wheel scrolling.
     */
    yawheel: Observable<YaEvent<ymaps.GeoObject>>;
    constructor(_ngZone: NgZone, _yaMapComponent: YaMapComponent);
    /**
     * Handles input changes and passes them in API.
     * @param changes
     */
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    /**
     * Destructs feature and passes it in API.
     * @param feature
     * @param geoObject
     */
    private _setFeature;
    /**
     * Creates GeoObject.
     */
    private _createGeoObject;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<YaGeoObjectDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<YaGeoObjectDirective, "ya-geoobject", never, { "feature": "feature"; "options": "options"; }, { "ready": "ready"; "balloonclose": "balloonclose"; "balloonopen": "balloonopen"; "beforedrag": "beforedrag"; "beforedragstart": "beforedragstart"; "yaclick": "yaclick"; "yacontextmenu": "yacontextmenu"; "yadblclick": "yadblclick"; "yadrag": "yadrag"; "yadragend": "yadragend"; "yadragstart": "yadragstart"; "editorstatechange": "editorstatechange"; "geometrychange": "geometrychange"; "hintclose": "hintclose"; "hintopen": "hintopen"; "mapchange": "mapchange"; "yamousedown": "yamousedown"; "yamouseenter": "yamouseenter"; "yamouseleave": "yamouseleave"; "yamousemove": "yamousemove"; "yamouseup": "yamouseup"; "multitouchend": "multitouchend"; "multitouchmove": "multitouchmove"; "multitouchstart": "multitouchstart"; "optionschange": "optionschange"; "overlaychange": "overlaychange"; "parentchange": "parentchange"; "propertieschange": "propertieschange"; "yawheel": "yawheel"; }, never>;
}

//# sourceMappingURL=ya-geoobject.directive.d.ts.map